"""
Type definitions for LLM Lab

This package provides comprehensive type definitions for the LLM Lab framework,
including TypedDict classes, Protocol interfaces, and custom type aliases.

Key modules:
- core: Core data structures (provider info, model parameters, configurations)
- evaluation: Evaluation results and benchmark data structures
- config: Configuration and settings type definitions
- protocols: Protocol classes for structural typing
- custom: Custom types, type aliases, and NewType definitions
- generics: Generic base classes with type constraints and bounds
"""

# Core type exports for easy importing
from .callables import (
    AggregationFunction,
    AsyncGenerationFunction,
    BatchGenerationFunction,
    BenchmarkFunction,
    DataProcessor,
    DataTransformer,
    ErrorCallback,
    EvaluationFunction,
    EvaluationMetric,
    FilterFunction,
    GenerativeModel,
    MetricCalculationFunction,
    PredicateFunction,
    ProgressCallback,
    StreamingGenerationFunction,
    TextGenerationFunction,
    TypeGuardFunction,
    ValidationFunction,
    ValidatorFunction,
)
from .config import (
    ConfigValue,
    NestedConfig,
    ValidationConfig,
)
from .core import (
    APIResponse,
    ConfigDict,
    ErrorResponse,
    ModelParameters,
    ProviderInfo,
)
from .custom import (
    CacheValue,
    ExperimentId,
    ModelId,
    ResponseData,
    TaskId,
    ValidationInput,
)
from .evaluation import (
    BenchmarkResult,
    EvaluationResult,
    MethodResult,
    MetricResult,
)
from .final_annotations import (
    BaseEvaluator,
    BaseProcessor,
    EnhancedEvaluationInterface,
    EnhancedModelInterface,
    ImmutableConfig,
    TypedBuilder,
    TypedResult,
    TypeValidator,
    enforce_final,
    final_method,
)
from .generics import (
    GenericBuilder,
    GenericCache,
    GenericCollectionAggregator,
    GenericEvaluator,
    GenericFactory,
    GenericMetricCalculator,
    GenericProcessor,
    GenericRepository,
    GenericValidator,
)
from .protocols import (
    APIClient,
    BatchProvider,
    BenchmarkRunner,
    BenchmarkType,
    CacheProvider,
    Comparable,
    ComparableType,
    ConfigType,
    ConfigurationManager,
    DataType,
    DataValidator,
    Evaluator,
    ExperimentTracker,
    Hashable,
    HashableType,
    IdentifierType,
    IterableType,
    K,
    Logger,
    MappingType,
    MetricCalculator,
    MetricType,
    ModelInfoType,
    ModelManager,
    NumericType,
    Plugin,
    ProcessorInputType,
    ProcessorOutputType,
    Provider,
    ProviderConfigType,
    ProviderType,
    ResponseType,
    ResultType,
    SequenceType,
    Serializable,
    SerializableType,
    SettingsType,
    StreamingProvider,
    StringOrBytesType,
    # TypeVar exports
    T,
    TaskRunner,
    U,
    V,
)

__all__ = [
    # Core types
    "ProviderInfo",
    "ModelParameters",
    "ConfigDict",
    "APIResponse",
    "ErrorResponse",
    # Evaluation types
    "EvaluationResult",
    "MethodResult",
    "BenchmarkResult",
    "MetricResult",
    # Configuration types
    "ValidationConfig",
    "NestedConfig",
    "ConfigValue",
    # Custom types
    "ModelId",
    "TaskId",
    "ExperimentId",
    "ResponseData",
    "ValidationInput",
    "CacheValue",
    # Protocol classes
    "Provider",
    "BatchProvider",
    "StreamingProvider",
    "Evaluator",
    "BenchmarkRunner",
    "MetricCalculator",
    "Logger",
    "ConfigurationManager",
    "CacheProvider",
    "DataValidator",
    "ModelManager",
    "ExperimentTracker",
    "TaskRunner",
    "Plugin",
    "APIClient",
    "Serializable",
    "Comparable",
    "Hashable",
    # TypeVar definitions
    "T",
    "U",
    "K",
    "V",
    "ResultType",
    "MetricType",
    "BenchmarkType",
    "ConfigType",
    "SettingsType",
    "ProviderConfigType",
    "ProviderType",
    "ResponseType",
    "ModelInfoType",
    "DataType",
    "ProcessorInputType",
    "ProcessorOutputType",
    "NumericType",
    "StringOrBytesType",
    "IdentifierType",
    "SequenceType",
    "MappingType",
    "IterableType",
    "SerializableType",
    "ComparableType",
    "HashableType",
    # Generic base classes
    "GenericProcessor",
    "GenericEvaluator",
    "GenericCache",
    "GenericRepository",
    "GenericFactory",
    "GenericCollectionAggregator",
    "GenericValidator",
    "GenericMetricCalculator",
    "GenericBuilder",
    # Callable types
    "TextGenerationFunction",
    "BatchGenerationFunction",
    "StreamingGenerationFunction",
    "AsyncGenerationFunction",
    "EvaluationFunction",
    "MetricCalculationFunction",
    "BenchmarkFunction",
    "ProgressCallback",
    "ErrorCallback",
    "ValidationFunction",
    "TypeGuardFunction",
    "ValidatorFunction",
    "DataProcessor",
    "PredicateFunction",
    "FilterFunction",
    "AggregationFunction",
    "GenerativeModel",
    "EvaluationMetric",
    "DataTransformer",
    # Final annotations
    "ImmutableConfig",
    "TypedResult",
    "BaseProcessor",
    "BaseEvaluator",
    "EnhancedModelInterface",
    "EnhancedEvaluationInterface",
    "TypeValidator",
    "TypedBuilder",
    "final_method",
    "enforce_final",
]
